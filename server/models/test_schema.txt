DROP KEYSPACE IF EXISTS test_datadump;

CREATE KEYSPACE IF NOT EXISTS test_datadump with replication = {'class': 'SimpleStrategy', 'replication_factor':'1'};

CREATE TABLE IF NOT EXISTS test_datadump.users (
  username text PRIMARY KEY,
  password text,
  authorities list<text>,
  display_name text,
  email text,
  is_enabled boolean,
  date_created timestamp,
  last_login timestamp,
  twitter map<text, text>,
  facebook map<text, text>,
  github map<text, text>,
  google map<text, text>
);

CREATE INDEX IF NOT EXISTS ON test_datadump.users (twitter);
CREATE INDEX IF NOT EXISTS ON test_datadump.users (facebook);
CREATE INDEX IF NOT EXISTS ON test_datadump.users (github);
CREATE INDEX IF NOT EXISTS ON test_datadump.users (google);

CREATE TABLE IF NOT EXISTS test_datadump.user_tokens (
  access_token text PRIMARY KEY,
  username text,
  time timestamp
) WITH default_time_to_live = 900;

CREATE TABLE IF NOT EXISTS test_datadump.login_attempts (
  ip text,
  username text,
  time timestamp,
  PRIMARY KEY ((ip, username), time)
) WITH CLUSTERING ORDER BY (time DESC) AND default_time_to_live = 1200;

CREATE TABLE IF NOT EXISTS test_datadump.buckets (
  id timeuuid,
  name text,
  description text,
  username text,
  is_public boolean,
  PRIMARY KEY(username, id)
) WITH CLUSTERING ORDER BY (id DESC);

CREATE INDEX ON test_datadump.buckets (name);

CREATE TABLE IF NOT EXISTS test_datadump.bucket_items (
  id timeuuid,
  year_month  int,
  bucket_id timeuuid,
  username text,
  data map<text, text>,
  PRIMARY KEY((bucket_id, username, year_month), id)
) WITH CLUSTERING ORDER BY (id DESC);
